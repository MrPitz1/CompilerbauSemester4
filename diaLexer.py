from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,107,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,5,0,26,8,0,10,
        0,12,0,29,9,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,5,1,38,8,1,10,1,12,1,41,
        9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,5,2,54,8,2,10,2,
        12,2,57,9,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,
        4,6,72,8,6,11,6,12,6,73,1,6,1,6,1,7,4,7,79,8,7,11,7,12,7,80,1,7,
        1,7,1,8,1,8,5,8,87,8,8,10,8,12,8,90,9,8,1,8,1,8,1,9,1,9,5,9,96,8,
        9,10,9,12,9,99,9,9,1,9,1,9,1,10,4,10,104,8,10,11,10,12,10,105,0,
        0,11,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,1,0,5,2,
        0,10,10,13,13,1,0,39,39,1,0,34,34,3,0,9,9,12,12,32,32,7,0,10,10,
        13,13,34,35,39,39,59,59,123,123,125,125,114,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,0,
        0,3,32,1,0,0,0,5,48,1,0,0,0,7,64,1,0,0,0,9,66,1,0,0,0,11,68,1,0,
        0,0,13,71,1,0,0,0,15,78,1,0,0,0,17,84,1,0,0,0,19,93,1,0,0,0,21,103,
        1,0,0,0,23,27,5,35,0,0,24,26,8,0,0,0,25,24,1,0,0,0,26,29,1,0,0,0,
        27,25,1,0,0,0,27,28,1,0,0,0,28,30,1,0,0,0,29,27,1,0,0,0,30,31,6,
        0,0,0,31,2,1,0,0,0,32,33,5,39,0,0,33,34,5,39,0,0,34,35,5,39,0,0,
        35,39,1,0,0,0,36,38,8,1,0,0,37,36,1,0,0,0,38,41,1,0,0,0,39,37,1,
        0,0,0,39,40,1,0,0,0,40,42,1,0,0,0,41,39,1,0,0,0,42,43,5,39,0,0,43,
        44,5,39,0,0,44,45,5,39,0,0,45,46,1,0,0,0,46,47,6,1,0,0,47,4,1,0,
        0,0,48,49,5,34,0,0,49,50,5,34,0,0,50,51,5,34,0,0,51,55,1,0,0,0,52,
        54,8,2,0,0,53,52,1,0,0,0,54,57,1,0,0,0,55,53,1,0,0,0,55,56,1,0,0,
        0,56,58,1,0,0,0,57,55,1,0,0,0,58,59,5,34,0,0,59,60,5,34,0,0,60,61,
        5,34,0,0,61,62,1,0,0,0,62,63,6,2,0,0,63,6,1,0,0,0,64,65,5,123,0,
        0,65,8,1,0,0,0,66,67,5,125,0,0,67,10,1,0,0,0,68,69,5,59,0,0,69,12,
        1,0,0,0,70,72,7,0,0,0,71,70,1,0,0,0,72,73,1,0,0,0,73,71,1,0,0,0,
        73,74,1,0,0,0,74,75,1,0,0,0,75,76,6,6,0,0,76,14,1,0,0,0,77,79,7,
        3,0,0,78,77,1,0,0,0,79,80,1,0,0,0,80,78,1,0,0,0,80,81,1,0,0,0,81,
        82,1,0,0,0,82,83,6,7,0,0,83,16,1,0,0,0,84,88,5,39,0,0,85,87,8,1,
        0,0,86,85,1,0,0,0,87,90,1,0,0,0,88,86,1,0,0,0,88,89,1,0,0,0,89,91,
        1,0,0,0,90,88,1,0,0,0,91,92,5,39,0,0,92,18,1,0,0,0,93,97,5,34,0,
        0,94,96,8,2,0,0,95,94,1,0,0,0,96,99,1,0,0,0,97,95,1,0,0,0,97,98,
        1,0,0,0,98,100,1,0,0,0,99,97,1,0,0,0,100,101,5,34,0,0,101,20,1,0,
        0,0,102,104,8,4,0,0,103,102,1,0,0,0,104,105,1,0,0,0,105,103,1,0,
        0,0,105,106,1,0,0,0,106,22,1,0,0,0,9,0,27,39,55,73,80,88,97,105,
        1,6,0,0
    ]

class diaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    COMMENT_HASH = 1
    COMMENT_SINGLE = 2
    COMMENT_DOUBLE = 3
    LPAREN = 4
    RPAREN = 5
    SEMICOLON = 6
    LINEBREAK = 7
    WS = 8
    STRING_SINGLE = 9
    STRING_DOUBLE = 10
    CODE = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "';'" ]

    symbolicNames = [ "<INVALID>",
            "COMMENT_HASH", "COMMENT_SINGLE", "COMMENT_DOUBLE", "LPAREN", 
            "RPAREN", "SEMICOLON", "LINEBREAK", "WS", "STRING_SINGLE", "STRING_DOUBLE", 
            "CODE" ]

    ruleNames = [ "COMMENT_HASH", "COMMENT_SINGLE", "COMMENT_DOUBLE", "LPAREN", 
                  "RPAREN", "SEMICOLON", "LINEBREAK", "WS", "STRING_SINGLE", 
                  "STRING_DOUBLE", "CODE" ]

    grammarFileName = "dia.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


